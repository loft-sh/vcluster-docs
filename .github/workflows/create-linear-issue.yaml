name: Create follow up linear issue

on:
  pull_request_target:
    types:
      - labeled
jobs:
  create-linear-issue-on-pull-request:
    if: ${{ github.event.label.name == 'follow-up' }}
    runs-on: ubuntu-latest
    steps:
      - name: Clean PR description
        id: clean_description
        run: |
          # Get PR body and temporarily replace newlines for processing
          PR_BODY=$(echo '${{ github.event.pull_request.body }}' | tr '\n' '\r')
          
          # Remove all markdown comments (anything between <!-- and -->)
          CLEAN_BODY=$(echo "$PR_BODY" | perl -pe 's/<!--.*?-->//g')
          
          # Restore newlines and escape for GitHub Actions
          CLEAN_BODY=$(echo "$CLEAN_BODY" | tr '\r' '\n')
          
          # Set the output variable with cleaned description
          echo "description<<EOF" >> $GITHUB_OUTPUT
          echo "$CLEAN_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create the Linear Issue
        id: createIssue
        uses: ctriolo/action-create-linear-issue@v0.7
        with:
          linear-api-key: ${{secrets.LINEAR_API_KEY}}
          linear-team-key: "DOC"
          linear-issue-title: "follow-up: ${{github.event.pull_request.title}}"
          linear-issue-description: ${{ steps.clean_description.outputs.description }}
          linear-attachment-url: ${{github.event.pull_request.html_url}}
          linear-attachment-title: ${{github.event.pull_request.title}}
          linear-issue-label-ids: '918eb5e1-2297-44f0-b618-ca1659cbceb7' # This is label id for follow-up label

      - name: Create comment in PR with Linear Issue link
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.createIssue.outputs.linear-issue-url }}