name: Redirect Check

on:
  pull_request:
    paths:
      - 'vcluster/**'
      - 'vcluster_versioned_docs/**'
      - 'netlify.toml'
      - 'hack/test-redirects.hurl'

jobs:
  check-redirects:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Check redirects
        id: check
        run: |
          go run hack/redirect-resolver/main.go -mode detect
          
          if [ -f "hack/path-changes.json" ] && [ "$(jq '.changes | length' hack/path-changes.json)" -gt 0 ]; then
            go run hack/redirect-resolver/main.go -mode update
            
            if git diff --exit-code netlify.toml hack/redirect-history.json hack/test-redirects.hurl > /dev/null 2>&1; then
              echo "result=ok" >> $GITHUB_OUTPUT
            else
              echo "result=needs-update" >> $GITHUB_OUTPUT
            fi
          else
            echo "result=ok" >> $GITHUB_OUTPUT
          fi

      - name: Comment PR
        if: steps.check.outputs.result == 'needs-update'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Documentation paths have changed. Please run locally:\n\n```bash\n./hack/update-redirects.sh\ngit add netlify.toml hack/redirect-history.json hack/test-redirects.hurl\ngit commit -m "chore: update redirects"\n```'
            })

      - name: Fail if redirects need updating
        if: steps.check.outputs.result == 'needs-update'
        run: exit 1

  test-redirects:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    needs: check-redirects
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Install Hurl
        run: |
          curl -sSL https://github.com/Orange-OpenSource/hurl/releases/download/7.0.0/hurl-7.0.0-x86_64-unknown-linux-gnu.tar.gz | tar xz
          sudo mv hurl-7.0.0-x86_64-unknown-linux-gnu/bin/hurl /usr/local/bin/

      - name: Wait for Netlify deployment
        run: |
          PREVIEW_URL="https://deploy-preview-${{ github.event.pull_request.number }}--vcluster-docs-site.netlify.app/docs/"
          echo "Waiting for Netlify preview at: $PREVIEW_URL"
          
          for i in {1..60}; do
            if curl -s -o /dev/null -w "%{http_code}" "$PREVIEW_URL" | grep -q "200\|301\|302"; then
              echo "Preview is ready!"
              break
            fi
            echo "Attempt $i/60: Preview not ready yet..."
            sleep 10
          done

      - name: Test redirects against preview
        run: |
          if [ -f "hack/test-redirects.hurl" ]; then
            PREVIEW_URL="https://deploy-preview-${{ github.event.pull_request.number }}--vcluster-docs-site.netlify.app"
            echo "Testing redirects against preview URL: $PREVIEW_URL"
            hurl --test --variable BASE_URL=$PREVIEW_URL hack/test-redirects.hurl || \
              echo "Some redirect tests failed - new redirects may not work until deployed"
          fi